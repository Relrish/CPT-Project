import pygame
pygame.init()


Black, LBlack, DGray, Gray, LGray, Silver, White = (70,70,70), (105,105,105), (140,140,140), (169,169,169),(192,192,192),(211,211,211), (255,255,255)
Orange, DRed, Green, Gold = (255,140,0), (128,0,0), (0, 255, 0), (255, 215, 0)
Red = (255, 0, 0)
Blue = (0, 0, 255)
Purple = (128, 0 ,128)
size = (1360, 700)
pcolor = 128
pc = 1
Portal = (pcolor,0, pcolor)
key1, key2 = False, False

lcolor = 128
lc = 1
lava = (255, pcolor, 0)

screen = pygame.display.set_mode(size)
pygame.display.set_caption("Professor Craven's Cool Game")
done = False
clock = pygame.time.Clock()
clock.tick(120)







def portaldraw():
    global pcolor, pc, Portal
    if pcolor >= 255:
        pc = False
    elif pcolor <= 180:
        pc = True

    if pc == True:
        pcolor = pcolor + 0.3
        Portal = (pcolor, 0, pcolor)
    else:
        pcolor = pcolor - 0.3
        Portal = (pcolor, 0, pcolor)

def lavadraw():
    global lcolor, lc, Orange
    if lcolor >= 150:
        lcolor = 150
        lc = False
    elif lcolor <= 100:
        lcolor = 100
        lc = True


while not done:
    for event in pygame.event.get(): # User did something
        if event.type == pygame.QUIT: # If user clicked close
            done = True # Flag that we are done so we exit this loop

        elif event.type == pygame.KEYUP:
            if event.key == pygame.K_e:
                key1 = False
            elif event.key == pygame.K_r:
                key1 = True
            elif event.key == pygame.K_t:
                key2 = False
            elif event.key == pygame.K_y:
                key2 = True
    screen.fill(Silver)
    lavadraw(), portaldraw()
    ####
    pygame.draw.line(screen, Portal, [25, 517], [70, 517], 50)
    pygame.draw.line(screen, Orange, [0, 690], [1360, 690], 20)

    pygame.draw.line(screen, LBlack, [0, 600], [100, 600], 5)
    pygame.draw.line(screen, LBlack, [180, 520], [250, 520], 5)
    pygame.draw.line(screen, LBlack, [360, 590], [400, 590], 5)
    pygame.draw.line(screen, Red, [490, 610], [540, 610], 5)
    pygame.draw.line(screen, LBlack, [540, 520], [590, 520], 5)
    pygame.draw.line(screen, Red, [590, 420], [640, 420], 5)
    pygame.draw.line(screen, LBlack, [280, 420], [340, 420], 5)
    pygame.draw.line(screen, Red, [180, 330], [250, 330], 5)
    #lavafall top
    pygame.draw.line(screen, Orange, [200, 0], [200, 150], 8)

    #lava ontop of platform
    pygame.draw.line(screen, Orange, [150, 144], [400, 144], 8)
    #platform
    pygame.draw.line(screen, LBlack, [150, 150], [400, 150], 5)

    # platform k-FALSE
    pygame.draw.line(screen, LBlack, [370, 300], [680, 300], 5)

    pygame.draw.line(screen, LBlack, [450,200], [520,200], 5)
    pygame.draw.line(screen, Blue, [400, 100], [450, 100], 5)
    pygame.draw.line(screen, Green, [280, 100], [340, 100], 5)
    pygame.draw.line(screen, Red, [620, 170], [700, 170], 5)
    pygame.draw.line(screen, Blue, [700, 630], [740, 630], 5)
    pygame.draw.line(screen, Green, [830, 620], [900, 620], 5)
    pygame.draw.line(screen, Green, [970, 640], [1080, 640], 5)
    pygame.draw.line(screen, Green, [1140, 640], [1200, 640], 5)


    #lavafall top
    pygame.draw.line(screen, Orange, [820, 0], [820, 500], 8)

    #lava ontop of platform
    pygame.draw.line(screen, Orange, [800, 494], [1100, 494], 8)
    #platform
    pygame.draw.line(screen, LBlack, [800, 500], [1100, 500], 5)
    #lavablock left
    pygame.draw.line(screen, LBlack, [800, 485], [800, 502], 5)

    pygame.draw.line(screen, Green, [1260, 570], [1300, 570], 5)
    pygame.draw.line(screen, Green, [1140, 500], [1200, 500], 5)
    pygame.draw.line(screen, Green, [970, 410], [1050, 410], 5)
    pygame.draw.line(screen, Red, [900, 310], [980, 310], 5)
    pygame.draw.line(screen, Blue, [1050, 210], [1150, 210], 5)
    pygame.draw.line(screen, Red, [1200, 100], [1360, 100], 5)
    pygame.draw.line(screen, Portal, [1315, 72], [1360, 72], 50)

    if key1 == False:
        #lavablock left
        pygame.draw.line(screen, LBlack, [150, 135], [150, 152], 5)
        #lavafall right
        pygame.draw.line(screen, Orange, [404, 141], [404, 294], 8)
        # lava ontop of platform k-TRUE
        pygame.draw.line(screen, Orange, [373, 293], [680, 293], 8)
        # lavafall right k-TRUE
        pygame.draw.line(screen, Orange, [684, 290], [684, 700], 8)
        # lavablock right k-TRUE
        pygame.draw.line(screen, LBlack, [1100, 485], [1100, 502], 5)
        # lavablock left
        pygame.draw.line(screen, LBlack, [370, 285], [370, 302], 5)
        #keydraw
        pygame.draw.rect(screen, Green, [605, 380, 20, 20], 5)
    else:
        # lavablock right k-FALSE
        pygame.draw.line(screen, LBlack, [400, 135], [400, 152], 5)
        # lavafall left k-FALSE
        pygame.draw.line(screen, Orange, [146, 141], [146, 700], 8)
        # lavafall right k-FALSE
        pygame.draw.line(screen, Orange, [1104, 491], [1104, 700], 8)
        #keydraw
        pygame.draw.rect(screen, Green, [300, 60, 20, 20], 5)

    #falling lava
    #-34 +8 same -34

    #key
    #-34 +20 +34 -34




    #-34, nothing    -34, -38
    # yvalue - 1

    #for key xvalue = +30 yvalue = -40

    #    elif xvalue > 616 and xvalue < 720 and yvalue < 166 and yvalue > 162:
    #        yvalue = 162
    #        gravity = 0
    #        cooldownJump()
    #    elif xvalue > 486 and xvalue < 600 and yvalue < 96 and yvalue > 92:
    #        yvalue = 95
    #        gravity = 0
    #        cooldownJump()
    #    elif xvalue > 1206 and xvalue < 1360 and yvalue < 566 and yvalue > 562:
    #        yvalue = 565
    #        gravity = 0
    #        cooldownJump()


    pygame.display.flip()
