import pygame
pygame.init()
Black, LBlack, DGray, Gray, LGray, Silver, White = (70,70,70), (105,105,105), (140,140,140), (169,169,169),(192,192,192),(211,211,211), (255,255,255)
DRed, Green = (128,0,0), (0, 255, 0)

#temporary
Red, Blue = (255, 0, 0), (0, 0, 255)

pcolor = 128
pc, Portal = 1, (pcolor, 0 ,pcolor)
lcolor = 128
lc, Orange = 1, (255, pcolor, 0)
size = (1360, 700)
left_move,right_move = 0,0
xvalue,yvalue= 30,500
j, jump, canJump, gravity, jumpCooldown = 0,0,True,0,0
done=False
mapCounter = 0
key1, key2 = False,False
font1, font2 = pygame.font.SysFont('', 50, True, False), pygame.font.SysFont('', 40, False, False)
startScreen = True
screen = pygame.display.set_mode(size)
pygame.display.set_caption("Jumper")
clock=pygame.time.Clock()

clock.tick(120)

def cooldownJump():
    global canJump,gravity
    gravity = 0
    if jumpCooldown < 0:
        canJump = True

def reset():
    global xvalue,yvalue,key1,key2
    xvalue, yvalue, key1, key2 = 30, 500, False, False

def portaldraw():
    global pcolor, pc, Portal
    if pcolor >= 255:
        pc = False
    elif pcolor <= 180:
        pc = True

    if pc == True:
        pcolor = pcolor + 0.3
        Portal = (pcolor, 0, pcolor)
    else:
        pcolor = pcolor - 0.3
        Portal = (pcolor, 0, pcolor)
pygame.font.SysFont('', 40, False, False)
def lavadraw():
    global lcolor, lc, Orange
    if lcolor >= 150:
        lcolor = 150
        lc = False
    elif lcolor <= 100:
        lcolor = 100
        lc = True

    if lc == True:
        lcolor = lcolor + 0.1
        Orange = (255, lcolor, 0)
    else:
        lcolor = lcolor - 0.1
        Orange = (255, lcolor, 0)

def map0():
    screen.fill(LGray)
    lavadraw()
    portaldraw()
    text1 = font1.render("Welcome!", True, LBlack)
    text2 = font2.render("The objective of the game is to reach the portal on the right side of the map.", True, LBlack)
    text3 = font2.render("This is you. You control him by using the arrow keys.", True, LBlack)
    text4 = font2.render("This is a portal. Get to the one on the right side of the screen to progress.", True, LBlack)
    text5 = font2.render("This is lava. Touching anything of this colour will send you back to the beginning.", True,
                         LBlack)
    text6 = font2.render("This is a key. Some maps will require you to collect keys in order to progress.", True,
                         LBlack)
    text7 = font2.render("Jump across platforms to reach the portal on the right.", True, LBlack)
    text8 = font2.render("Good luck!", True, LBlack)
    text9 = font2.render("Press spacebar to begin.", True, LBlack)
    screen.blit(text1, [0, 0])
    screen.blit(text2, [0, 50])
    screen.blit(text3, [60, 105])
    screen.blit(text4, [60, 160])
    screen.blit(text5, [70, 225])
    screen.blit(text6, [50, 285])
    screen.blit(text7, [0, 335])
    screen.blit(text8, [0, 385])
    screen.blit(text9, [0, 650])
    pygame.draw.ellipse(screen, Red, [10, 100, 35, 35])
    pygame.draw.line(screen, Portal, [5, 175], [50, 175], 50)
    pygame.draw.line(screen, Orange, [10, 240], [60, 240], 20)
    pygame.draw.rect(screen, Green, [20, 290, 20, 20], 5)
    pygame.display.flip()

def map1():
    screen.fill(Black)
    pygame.display.set_caption("Jumper: Level 1")
    portaldraw()
    lavadraw()
    pygame.draw.line(screen, Portal, [25, 517], [70, 517], 50)
    pygame.draw.line(screen, Portal, [1315, 512], [1360, 512], 50)
    pygame.draw.ellipse(screen, Red, [xvalue, yvalue, 35, 35])
    pygame.draw.line(screen, LBlack, [0, 600], [100, 600], 5)
    pygame.draw.line(screen, LBlack, [200, 600], [300, 600], 5)
    pygame.draw.line(screen, LBlack, [300, 500], [400, 500], 5)
    pygame.draw.line(screen, LBlack, [100, 400], [200, 400], 5)
    pygame.draw.line(screen, LBlack, [250, 300], [320, 300], 5)
    pygame.draw.line(screen, LBlack, [400, 220], [500, 220], 5)
    pygame.draw.line(screen, LBlack, [700, 500], [800, 500], 5)
    pygame.draw.line(screen, LBlack, [870, 600], [920, 600], 5)
    pygame.draw.line(screen, LBlack, [970, 600], [1010, 600], 5)
    pygame.draw.line(screen, LBlack, [1080, 600], [1150, 600], 5)
    pygame.draw.line(screen, LBlack, [1170, 540], [1360, 540], 5)
    pygame.draw.line(screen, Orange, [0, 690], [1360, 690], 20)
    pygame.display.flip()

def map2():
    screen.fill(DGray)
    portaldraw()
    lavadraw()
    pygame.display.set_caption("Jumper: Level 2")
    pygame.draw.line(screen, Portal, [25, 517], [70, 517], 50)
    pygame.draw.line(screen, Portal, [1315, 492], [1360, 492], 50)
    pygame.draw.ellipse(screen, Red, [xvalue, yvalue, 35, 35])
    pygame.draw.line(screen, LBlack, [0, 600], [100, 600], 5)
    pygame.draw.line(screen, LBlack, [250, 620], [300, 620], 5)
    pygame.draw.line(screen, LBlack, [420, 560], [490, 560], 5)
    pygame.draw.line(screen, LBlack, [500, 480], [600, 480], 5)
    pygame.draw.line(screen, LBlack, [390, 380], [430, 380], 5)
    pygame.draw.line(screen, LBlack, [190, 300], [270, 300], 5)
    pygame.draw.line(screen, LBlack, [380, 220], [430, 220], 5)
    pygame.draw.line(screen, LBlack, [520, 150], [640, 150], 5)
    pygame.draw.line(screen, LBlack, [900, 640], [1000, 640], 5)
    pygame.draw.line(screen, LBlack, [1100, 600], [1170, 600], 5)
    pygame.draw.line(screen, LBlack, [1250, 520], [1360, 520], 5)
    pygame.draw.line(screen, Orange, [0, 690], [1360, 690], 20)
    pygame.display.flip()

def map3():
    screen.fill(Gray)
    portaldraw()
    lavadraw()
    pygame.display.set_caption("Jumper: Level 3")
    pygame.draw.line(screen, Portal, [25, 517], [70, 517], 50)
    pygame.draw.line(screen, Portal, [1315, 552], [1360, 552], 50)
    pygame.draw.ellipse(screen, Red, [xvalue, yvalue, 35, 35])
    pygame.draw.line(screen, LBlack, [0, 600], [100, 600], 5)
    pygame.draw.line(screen, LBlack, [185, 500], [220, 500], 5)
    pygame.draw.line(screen, LBlack, [10, 420], [70, 420], 5)
    pygame.draw.line(screen, LBlack, [120, 330], [190, 330], 5)
    pygame.draw.line(screen, LBlack, [40, 220], [90, 220], 5)
    pygame.draw.line(screen, LBlack, [180, 100], [250, 100], 5)
    pygame.draw.line(screen, LBlack, [350, 100], [420, 100], 5)
    pygame.draw.line(screen, LBlack, [600, 440], [680, 440], 5)
    pygame.draw.line(screen, LBlack, [760, 370], [800, 370], 5)
    pygame.draw.line(screen, LBlack, [850, 230], [930, 230], 5)
    pygame.draw.line(screen, LBlack, [1040, 200], [1170, 200], 5)
    pygame.draw.line(screen, LBlack, [1000, 600], [1070, 600], 5)
    pygame.draw.line(screen, LBlack, [1200, 580], [1360, 580], 5)

    # Lava pool tile
    pygame.draw.line(screen,Orange, [1140,393], [1360, 393],8)
    pygame.draw.line(screen, DRed, [1140, 400], [1360, 400], 5)
    pygame.draw.line(screen, Orange, [0, 690], [1360, 690], 20)

    if key1 == False:
        pygame.draw.rect(screen, Green, [1095, 160, 20, 20], 5)
        pygame.draw.line(screen, Orange, [1135, 390], [1135, 700], 8)
    else:
        pygame.draw.line(screen, DRed, [1140, 385], [1140, 402], 5)
    pygame.display.flip()

def map4():
    screen.fill(LGray)
    portaldraw()
    lavadraw()
    pygame.display.set_caption("Jumper: Level 4")
    pygame.draw.line(screen, Portal, [25, 517], [70, 517], 50)
    pygame.draw.line(screen, Portal, [1315, 572], [1360, 572], 50)
    pygame.draw.ellipse(screen, Red, [xvalue, yvalue, 35, 35])
    pygame.draw.line(screen, LBlack, [0, 600], [100, 600], 5)
    pygame.draw.line(screen, LBlack, [0, 600], [100, 600], 5)
    pygame.draw.line(screen, LBlack, [180, 520], [230, 520], 5)
    pygame.draw.line(screen, LBlack, [300, 450], [370, 450], 5)
    pygame.draw.line(screen, LBlack, [50, 400], [120, 400], 5)
    pygame.draw.line(screen, LBlack, [120, 320], [150, 320], 5)
    pygame.draw.line(screen, LBlack, [200, 250], [270, 250], 5)
    pygame.draw.line(screen, LBlack, [60, 150], [100, 150], 5)

    # lava FALLING ON blue platform
    pygame.draw.line(screen, Orange, [450, 0], [450, 196], 8)

    # lava ON blue platform
    pygame.draw.line(screen, Orange, [400, 196], [546, 196], 8)
    pygame.draw.line(screen, DRed, [400, 202], [546, 202], 5)

    pygame.draw.line(screen, LBlack, [700, 450], [800, 450], 5)
    pygame.draw.line(screen, LBlack, [860, 400], [900, 400], 5)
    pygame.draw.line(screen, LBlack, [1040, 600], [1120, 600], 5)
    pygame.draw.line(screen, LBlack, [970, 300], [1020, 300], 5)
    pygame.draw.line(screen, LBlack, [790, 240], [870, 240], 5)
    pygame.draw.line(screen, LBlack, [650, 200], [720, 200], 5)
    pygame.draw.line(screen, LBlack, [520, 130], [600, 130], 5)
    pygame.draw.line(screen, LBlack, [1240, 600], [1360, 600], 5)

    # lava ON gren platform
    pygame.draw.line(screen, Orange, [1200, 394], [1300, 394], 8)
    pygame.draw.line(screen, DRed, [1200, 400], [1300, 400], 5)

    # lava FALLING ON gren platform
    pygame.draw.line(screen, Orange, [1283, 0], [1283, 394], 8)

    #green block
    pygame.draw.line(screen, DRed, [1300, 385], [1300, 402], 5)

    if key1 == False:
        pygame.draw.line(screen, Orange, [396, 193], [396, 700], 8)
        pygame.draw.line(screen, Orange, [550, 193], [550, 495], 8)
        pygame.draw.line(screen, Orange, [500, 494], [600, 494], 8)
        pygame.draw.line(screen, Orange, [496, 491], [496, 700], 8)
        pygame.draw.line(screen, Orange, [604, 491], [604, 700], 8)
        pygame.draw.line(screen, DRed, [500, 500], [600, 500], 5)
        pygame.draw.rect(screen, Green, [70, 110, 20, 20], 5)
    else:
        pygame.draw.line(screen, DRed, [400, 187], [400, 204], 5)
        pygame.draw.line(screen, DRed, [546, 187], [546, 204], 5)
        pygame.draw.line(screen, LBlack, [500, 500], [600, 500], 5)

    if key2 == False:
        pygame.draw.line(screen, Orange, [1196, 391], [1196, 700], 8)
        pygame.draw.rect(screen, Green, [550, 90, 20, 20], 5)
    else:
        pygame.draw.line(screen, DRed, [1200, 385], [1200, 402], 5)
    pygame.draw.line(screen, Orange, [0, 690], [1360, 690], 20)
    pygame.display.flip()

def map5():
    screen.fill(Silver)
    portaldraw()
    lavadraw()
    pygame.display.set_caption("Jumper: Level 5")
    pygame.draw.line(screen, Portal, [25, 517], [70, 517], 50)
    pygame.draw.ellipse(screen, Red, [xvalue, yvalue, 35, 35])
    pygame.draw.line(screen, LBlack, [0, 600], [100, 600], 5)
    pygame.draw.line(screen, Orange, [0, 690], [1360, 690], 20)
    pygame.display.flip()

def map1func():
    global yvalue, xvalue, gravity, canJump, mapCounter
    if xvalue > -34 and xvalue < 100 and yvalue < 566 and yvalue > 562:
        yvalue = 565
        cooldownJump()
    elif xvalue > 166 and xvalue < 300 and yvalue < 566 and yvalue > 562:
        yvalue = 565
        cooldownJump()
    elif xvalue > 266 and xvalue < 400 and yvalue < 466 and yvalue > 462:
        yvalue = 465
        cooldownJump()
    elif xvalue > 66 and xvalue < 200 and yvalue < 366 and yvalue > 362:
        yvalue = 365
        cooldownJump()
    elif xvalue > 216 and xvalue < 320 and yvalue < 266 and yvalue > 262:
        yvalue = 265
        cooldownJump()
    elif xvalue > 366 and xvalue < 500 and yvalue < 186 and yvalue > 182:
        yvalue = 185
        cooldownJump()
    elif xvalue > 666 and xvalue < 800 and yvalue < 466 and yvalue > 462:
        yvalue = 465
        cooldownJump()
    elif xvalue > 836 and xvalue < 920 and yvalue < 566 and yvalue > 562:
        yvalue = 565
        cooldownJump()
    elif xvalue > 946 and xvalue < 1010 and yvalue < 566 and yvalue > 562:
        yvalue = 565
        cooldownJump()
    elif xvalue > 1046 and xvalue < 1150 and yvalue < 566 and yvalue > 562:
        yvalue = 565
        cooldownJump()
    elif xvalue > 1046 and xvalue < 1150 and yvalue < 566 and yvalue > 562:
        yvalue = 565
        cooldownJump()
    elif xvalue > 1136 and xvalue < 1360 and yvalue < 506 and yvalue > 502:
        yvalue = 505
        cooldownJump()

    if xvalue == 1325 and yvalue == 505:
        reset()
        mapCounter += 1

def map2func():
    global yvalue, xvalue, gravity, canJump, mapCounter
    if xvalue > -34 and xvalue < 100 and yvalue < 566 and yvalue > 562:
        yvalue = 565
        cooldownJump()
    elif xvalue > 216 and xvalue < 300 and yvalue < 586 and yvalue > 582:
        yvalue = 585
        cooldownJump()
    elif xvalue > 386 and xvalue < 490 and yvalue < 526 and yvalue > 522:
        yvalue = 525
        cooldownJump()
    elif xvalue > 466 and xvalue < 600 and yvalue < 446 and yvalue > 442:
        yvalue = 445
        cooldownJump()
    elif xvalue > 356 and xvalue < 430 and yvalue < 346 and yvalue > 342:
        yvalue = 345
        cooldownJump()
    elif xvalue > 156 and xvalue < 270 and yvalue < 266 and yvalue > 262:
        yvalue = 265
        cooldownJump()
    elif xvalue > 346 and xvalue < 430 and yvalue < 186 and yvalue > 182:
        yvalue = 185
        cooldownJump()
    elif xvalue > 486 and xvalue < 640 and yvalue < 116 and yvalue > 112:
        yvalue = 115
        cooldownJump()
    elif xvalue > 866 and xvalue < 1000 and yvalue < 608 and yvalue > 602:
        yvalue = 605
        cooldownJump()
    elif xvalue > 1066 and xvalue < 1170 and yvalue < 566 and yvalue > 562:
        yvalue = 565
        cooldownJump()
    elif xvalue > 1216 and xvalue < 1360 and yvalue < 486 and yvalue > 482:
        yvalue = 485
        cooldownJump()

    if xvalue == 1325 and yvalue == 485:
        reset()
        mapCounter += 1

def map3func():
    global yvalue, xvalue, gravity, canJump, mapCounter, key1
    if xvalue > -34 and xvalue < 100 and yvalue < 566 and yvalue > 562:
        yvalue = 565
        cooldownJump()
    elif xvalue > 151 and xvalue < 220 and yvalue < 466 and yvalue > 462:
        yvalue = 465
        cooldownJump()
    elif xvalue > -24 and xvalue < 70 and yvalue < 386 and yvalue > 382:
        yvalue = 385
        cooldownJump()
    elif xvalue > 86 and xvalue < 190 and yvalue < 296 and yvalue > 292:
        yvalue = 295
        cooldownJump()
    elif xvalue > 6 and xvalue < 90 and yvalue < 186 and yvalue > 182:
        yvalue = 185
        cooldownJump()
    elif xvalue > 146 and xvalue < 250 and yvalue < 66 and yvalue > 62:
        yvalue = 65
        cooldownJump()
    elif xvalue > 316 and xvalue < 420 and yvalue < 66 and yvalue > 62:
        yvalue = 65
        cooldownJump()
    elif xvalue > 566 and xvalue < 680 and yvalue < 406 and yvalue > 402:
        yvalue = 405
        cooldownJump()
    elif xvalue > 726 and xvalue < 800 and yvalue < 336 and yvalue > 332:
        yvalue = 335
        cooldownJump()
    elif xvalue > 816 and xvalue < 930 and yvalue < 196 and yvalue > 192:
        yvalue = 195
        cooldownJump()
    elif xvalue > 1006 and xvalue < 1170 and yvalue < 166 and yvalue > 162:
        yvalue = 165
        cooldownJump()
    elif xvalue > 966 and xvalue < 1070 and yvalue < 566 and yvalue > 562:
        yvalue = 565
        cooldownJump()
    elif xvalue > 1166 and xvalue < 1360 and yvalue < 546 and yvalue > 542:
        yvalue = 545
        cooldownJump()

    elif xvalue > 1106 and xvalue < 1360 and yvalue < 366 and yvalue > 362:
        reset()
    if key1 == False:
        if xvalue > 1101 and xvalue < 1143 and yvalue < 700 and yvalue > 356:
            reset()
    if xvalue > 1060 and xvalue < 1115 and yvalue < 194 and yvalue > 126:
        key1 = True

    if xvalue == 1325 and yvalue == 545:
        reset()
        mapCounter += 1


def map4func():
    global yvalue, xvalue, gravity, canJump, mapCounter, key1, key2
    if xvalue > -34 and xvalue < 100 and yvalue < 566 and yvalue > 562:
        yvalue = 565
        cooldownJump()
    elif xvalue > 146 and xvalue < 230 and yvalue < 486 and yvalue > 482:
        yvalue = 485
        cooldownJump()
    elif xvalue > 266 and xvalue < 370 and yvalue < 416 and yvalue > 412:
        yvalue = 415
        cooldownJump()
    elif xvalue > 16 and xvalue < 120 and yvalue < 366 and yvalue > 362:
        yvalue = 365
        cooldownJump()
    elif xvalue > 86 and xvalue < 150 and yvalue < 286 and yvalue > 282:
        yvalue = 285
        cooldownJump()
    elif xvalue > 166 and xvalue < 270 and yvalue < 216 and yvalue > 212:
        yvalue = 215
        cooldownJump()
    elif xvalue > 26 and xvalue < 100 and yvalue < 116 and yvalue > 112:
        yvalue = 115
        cooldownJump()
    elif xvalue > 466 and xvalue < 600 and yvalue < 466 and yvalue > 462:
        yvalue = 465
        cooldownJump()
    elif xvalue > 666 and xvalue < 800 and yvalue < 416 and yvalue > 412:
        yvalue = 415
        cooldownJump()
    elif xvalue > 826 and xvalue < 900 and yvalue < 366 and yvalue > 362:
        yvalue = 365
        cooldownJump()
    elif xvalue > 1006 and xvalue < 1120 and yvalue < 566 and yvalue > 562:
        yvalue = 565
        cooldownJump()
    elif xvalue > 936 and xvalue < 1020 and yvalue < 266 and yvalue > 262:
        yvalue = 265
        cooldownJump()
    elif xvalue > 756 and xvalue < 870 and yvalue < 206 and yvalue > 202:
        yvalue = 205
        cooldownJump()
    elif xvalue > 616 and xvalue < 720 and yvalue < 166 and yvalue > 162:
        yvalue = 162
        cooldownJump()
    elif xvalue > 486 and xvalue < 600 and yvalue < 96 and yvalue > 92:
        yvalue = 95
        cooldownJump()
    elif xvalue > 1206 and xvalue < 1360 and yvalue < 566 and yvalue > 562:
        yvalue = 565
        cooldownJump()
    elif xvalue > 416 and xvalue < 458 and yvalue < 196 and yvalue > -34:
        reset()
    elif xvalue > 366 and xvalue < 546 and yvalue < 162 and yvalue > 158:
        reset()
    elif xvalue > 1166 and xvalue < 1300 and yvalue < 360 and yvalue > 356:
        reset()
    elif xvalue > 1249 and xvalue < 1291 and yvalue < 360 and yvalue > 0:
        reset()

    if key1 == False:
        if xvalue > 362 and xvalue < 404 and yvalue < 700 and yvalue > 159:
            reset()
        elif xvalue > 516 and xvalue < 558 and yvalue < 500 and yvalue > 159:
            reset()

    if key2 == False:
        if xvalue > 1249 and xvalue < 1291 and yvalue < 360 and yvalue > 0:
            reset()

    if xvalue > 36 and xvalue < 90 and yvalue < 144 and yvalue > 76:
        key1 = True
    elif xvalue > 516 and xvalue < 570 and yvalue < 124 and yvalue > 56:
        key2 = True

    if xvalue == 1325 and yvalue == 565:
        reset()
        mapCounter += 1

def map5func():
    global yvalue, xvalue, gravity, canJump, mapCounter, key1, key2
    if xvalue > -34 and xvalue < 100 and yvalue < 566 and yvalue > 562:
        yvalue = 565
        cooldownJump()

#Main Movement Loop
while not done:
    for event in pygame.event.get():
        if event.type==pygame.QUIT:
            done=True
        elif event.type == pygame.KEYDOWN:
            if event.key == pygame.K_LEFT:
                left_move = -1
            elif event.key == pygame.K_RIGHT:
                right_move = 1
            elif canJump == True:
                    if event.key == pygame.K_UP:
                        canJump = False
                        jump = 6
                        j = 0.1
                        jumpCooldown = 2
            elif event.key == pygame.K_a:
                gravity = 0
            elif startScreen == True:
                if event.key == pygame.K_SPACE:
                    mapCounter = 1
        elif event.type == pygame.KEYUP:
            if event.key == pygame.K_LEFT:
                left_move = 0
            elif event.key == pygame.K_RIGHT:
                right_move = 0
            elif event.key == pygame.K_UP:
                jump = 0
                j = 0

            #Cheats
            elif event.key == pygame.K_q:
                mapCounter -= 1
            elif event.key == pygame.K_w:
                mapCounter += 1
            elif event.key == pygame.K_e:
                key1 = False
            elif event.key == pygame.K_r:
                key1 = True
            elif event.key == pygame.K_t:
                key2 = False
            elif event.key == pygame.K_y:
                key2 = True
#Gravity Code
    gravity = gravity + 0.02
    yvalue = yvalue + gravity
#Floor/Platform Code
    if yvalue >= 665:
        reset()
    canJump = False
    if mapCounter == 0:
        gravity = 0
        reset()
    elif mapCounter == 1:
        map1func()
    elif mapCounter == 2:
        map2func()
    elif mapCounter == 3:
        map3func()
    elif mapCounter == 4:
        map4func()
    elif mapCounter == 5:
        map5func()
#Movement Code
    xvalue += left_move + right_move
    yvalue = yvalue - jump
    if jump > 0:
        jump = jump - j
    else:
        jump = 0
    jumpCooldown -= 1
#Restriction Code
    if xvalue < 0:
        xvalue = 0
    elif xvalue > 1325:
        xvalue = 1325
    elif yvalue < 0:
        yvalue = 0
        jump = 0
        j = 0
#Redrawing Code
    if mapCounter == 0:
        map0()
    elif mapCounter == 1:
        map1()
    elif mapCounter == 2:
        map2()
    elif mapCounter == 3:
        map3()
    elif mapCounter == 4:
        map4()
    elif mapCounter == 5:
        map5()
    # temporary

